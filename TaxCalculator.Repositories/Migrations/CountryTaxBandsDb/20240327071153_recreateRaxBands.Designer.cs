// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxCalculator.Repositories.DBContext;

#nullable disable

namespace TaxCalculator.Repositories.Migrations.CountryTaxBandsDb
{
    [DbContext(typeof(CountryTaxBandsDbContext))]
    [Migration("20240327071153_recreateRaxBands")]
    partial class recreateRaxBands
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaxCalculator.Repositories.Entities.CountryTaxBandsEntity", b =>
                {
                    b.Property<int>("CountryTaxBandsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryTaxBandsId"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryTaxBandsId");

                    b.ToTable("CountryTaxBands");
                });

            modelBuilder.Entity("TaxCalculator.Repositories.Entities.TaxBandEntity", b =>
                {
                    b.Property<int?>("TaxBandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TaxBandId"));

                    b.Property<int>("BandOrder")
                        .HasColumnType("int");

                    b.Property<int>("CountryTaxBandId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxRange")
                        .HasColumnType("int");

                    b.Property<int>("MinRange")
                        .HasColumnType("int");

                    b.Property<int>("TaxRate")
                        .HasColumnType("int");

                    b.HasKey("TaxBandId");

                    b.HasIndex("CountryTaxBandId");

                    b.ToTable("TaxBands");
                });

            modelBuilder.Entity("TaxCalculator.Repositories.Entities.TaxBandEntity", b =>
                {
                    b.HasOne("TaxCalculator.Repositories.Entities.CountryTaxBandsEntity", "CountryTaxBand")
                        .WithMany("TaxBands")
                        .HasForeignKey("CountryTaxBandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryTaxBand");
                });

            modelBuilder.Entity("TaxCalculator.Repositories.Entities.CountryTaxBandsEntity", b =>
                {
                    b.Navigation("TaxBands");
                });
#pragma warning restore 612, 618
        }
    }
}
